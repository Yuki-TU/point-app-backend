name: "CI"

on:
  workflow_dispatch:
  pull_request:
    paths:
      - "**.go"
      - .github/workflows/ci.yml
    branches:
      - main

jobs:
  linter:
    name: "Run format and linter"
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: generate secret key in JWT
      run: |
        echo "${{ secrets.JWT_SECRET_KEY }}" > ./auth/certificate/secret.pem
        chmod 444 ./auth/certificate/secret.pem
    - name: generate public key in JWT
      run: |
        echo "${{ secrets.JWT_PUBLIC_KEY }}" > ./auth/certificate/public.pem
        chmod 444 ./auth/certificate/public.pem

    - name: golangci-lint
      uses: reviewdog/action-golangci-lint@v2
      with:
        # GitHub Actions用のトークンを使用してGitHubのAPIにアクセスするための認証情報
        github_token: ${{ secrets.GITHUB_TOKEN }}
        # golangci-lintの実行オプション - 設定ファイルを指定し、全てのパッケージをチェック
        golangci_lint_flags: "--config=./.golangci.yml ./..."
        # エラーが検出された場合にCIを失敗させる
        fail_level: error
        # レビューコメントをPull Requestに直接投稿する形式で結果を報告
        reporter: "github-pr-review"
        # 警告レベル以上の問題を報告する
        level: warning
        go_version_file: './go.mod'
        golangci_lint_version: latest
  test:
    name: "Run test"
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.0.31
        options: >-
          --health-cmd "mysqladmin ping -h localhost"
          --health-interval 20s
          --health-timeout 10s
          --health-retries 10
        ports:
          - 3306:3306
        volumes:
          - ${{ github.workspace }}/_tools/mysql/conf.d:/etc/mysql/conf.d
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_USER: admin
          MYSQL_PASSWORD: password
          MYSQL_DATABASE: "point_app_test"
      redis:
        image: redis
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379
    steps:
    # service内のvolumesでリポジトリにアクセスする際は必要 
    # https://github.com/actions/checkout/issues/211#issuecomment-1336952468 
    - name: Chown user
      run: |
        sudo chown -R $USER:$USER $GITHUB_WORKSPACE
    # キャッシュを使うため、checkout->setup-goの順番にする
    # https://medium.com/@s0k0mata/github-actions-and-go-the-new-cache-feature-in-actions-setup-go-v4-and-what-to-watch-out-for-aeea373ed07d
    - uses: actions/checkout@v4
    - uses: actions/setup-go@v5
      id: setup-go
      with:
        go-version-file: './go.mod'
    - name: Cache mysqldef binary
      id: cache-mysqldef
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/go-build
          ~/go/bin/mysqldef
        key: ${{ runner.os }}-mysqldef-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-mysqldef-
    - name: go module install
      if: ${{ steps.cache-mysqldef.outputs.cache-hit != 'true' }}
      run: |
        go install github.com/sqldef/sqldef/cmd/mysqldef@latest
    - name: Migration
      run: |
        mysqldef -u root -h 127.0.0.1 -P 3306 point_app_test < ./_tools/mysql/schema.sql
    - name: generate secret key in JWT
      run: | 
        echo "${{ secrets.JWT_SECRET_KEY }}" > ./auth/certificate/secret.pem
        chmod 444 ./auth/certificate/secret.pem        
    - name: generate public key in JWT
      run: |
        echo "${{ secrets.JWT_PUBLIC_KEY }}" > ./auth/certificate/public.pem
        chmod 444 ./auth/certificate/public.pem
    - run: go test ./... -coverprofile=coverage.out
    - name: report coverage
      uses: k1LoW/octocov-action@v1
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
