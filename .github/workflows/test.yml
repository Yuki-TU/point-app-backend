on:
  push:
    branches:
      - "main"
  pull_request:
name: test
jobs:
  test:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.0.31
        options: >-
          --health-cmd "mysqladmin ping -h localhost"
          --health-interval 20s
          --health-timeout 10s
          --health-retries 10
        ports:
          - 3306:3306
        volumes:
          - ${{ github.workspace }}/_tools/mysql/conf.d:/etc/mysql/conf.d
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_USER: admin
          MYSQL_PASSWORD: password
          MYSQL_DATABASE: point_app
      redis:
        image: redis
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379
    steps:
    - uses: actions/setup-go@v3
      with:
        go-version: '>=1.19'
    # service内のvolumesでリポジトリにアクセスする際は必要 
    # https://github.com/actions/checkout/issues/211#issuecomment-1336952468 
    - name: Chown user
      run: |
        sudo chown -R $USER:$USER $GITHUB_WORKSPACE
    - uses: actions/checkout@v3
    - name: Migration
      run: |
        go install github.com/k0kubun/sqldef/cmd/mysqldef@latest
        mysqldef -u root -h 127.0.0.1 -P 3306 point_app < ./_tools/mysql/schema.sql
    - name: generate secret key in JWT
      run: | 
        echo "${{ secrets.JWT_SECRET_KEY }}" > ./auth/certificate/secret.pem
        chmod 444 ./auth/certificate/secret.pem        
    - name: generate public key in JWT
      run: |
        echo "${{ secrets.JWT_PUBLIC_KEY }}" > ./auth/certificate/public.pem
        chmod 444 ./auth/certificate/public.pem
    - run: go test ./... -coverprofile=coverage.out
    - name: report coverage
      uses: k1LoW/octocov-action@v0
