openapi: 3.0.0
info:
  version: 0.2.0
  title: point-app-backend RESTful API
  description: >-
    ハッカソン2022で作成するポイントアプリのバックエンドAPI
servers:
  - url: 'http://{host}:8081/api/v1'
    description: go service api server endpoint application
    variables:
      host:
        default: localhost
        enum:
          - localhost
paths:
  /temporary_users:
    $ref: ./paths/temporary_user.yml
  /users:
    $ref: ./paths/users.yml
  /account:
    $ref: ./paths/account.yml
  /point_transactions:
    $ref: ./paths/point_transactions.yml
  /random_password:
    $ref: ./paths/random_password.yml
  /temporary_email:
    $ref: ./paths/temporary_email.yml
  /email:
    $ref: ./paths/email.yml
  /password:
    $ref: ./paths/password.yml
  /signin:
    $ref: ./paths/signin.yml
  /signout:
    $ref: ./paths/signout.yml
  /notifications/{notificationId}:
    $ref: ./paths/notifications/[notificationId].yml
  /notifications:
    $ref: ./paths/notifications.yml
  /unchecked_notification_count:
    $ref: ./paths/unchecked_notification_count.yml

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT 
      description: 認証トークン
  schemas:
    Error:
      type: object
      properties:
        statusCode:
          type: integer
          format: int64
          example: "400"
        title:
          type: string
          example: "パラメータエラー"
        message: 
          type: string
          example: "name: cannot be blank."   
  
  responses:
    400Error:
      description: |
        パラメーターエラー
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            example: "400"
            title: "パラメータエラー"
            message: "name: cannot be blank." 

    401UnauthorizedError:
      description: |
        認証失敗
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            example: "401"
            title: "認証エラー"
            message: "認証が失敗しました。再ログインしてください。" 

    404Error:
      description: |
        データ存在しない
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            example: "404"
            title: "データが存在しないエラー"
            message: "データが存在しません。" 

    500Error:
      description: |
        サーバーエラー
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            example: "500"
            title: "サーバーエラー"
            message: "サーバー側で何らかのエラーが発生しました。時間をおいて再度アクセスしてください。" 
